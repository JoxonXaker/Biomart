from django.db import models
from django_quill.fields import QuillField
from django.utils.safestring import mark_safe

from imagekit.models import ImageSpecField, ProcessedImageField
from imagekit.processors import ResizeToFill


# 1. Dorilar Kategoriyasi modeli
class CategoryModel(models.Model):
    allowed = models.BooleanField(default=False, help_text="–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø–æ–ª—è –≤—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ —Å–∞–π—Ç—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", verbose_name="üì¢ –†–∞–∑—Ä–µ—à–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é")
    name = models.CharField(max_length=100, unique=True, verbose_name="‚ôªÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞")
    description = models.TextField(blank=True, null=True, verbose_name="üìù –û–ø–∏—Å–∞–Ω–∏–µ")
    image = ProcessedImageField(
        upload_to='category_images/',
        processors=[ResizeToFill(250, 250)],
        format='JPEG',
        options={'quality': 100},
        null=True
    )

    class Meta:
        verbose_name = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
        verbose_name_plural = "‚ôªÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞"
    
    def __str__(self):
        return self.name
    
    def display_image(self):
        if self.image:
            return mark_safe(f'<a href="{self.image.url}" data-lightbox="image"><img src="{self.image.url}" width="45" height="45" style="border: 1px solid #e8e8e8;"/></a>')
        return mark_safe(f'<img src="/media/admin-interface/helper/image.png" width="45" height="45" style="border: 1px solid #e8e8e8;"/>')



# 2. Brend modeli
class BrandModel(models.Model):
    allowed = models.BooleanField(default=False, help_text="–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø–æ–ª—è –≤—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ —Å–∞–π—Ç—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", verbose_name="üì¢ –†–∞–∑—Ä–µ—à–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é")
    name = models.CharField(max_length=100, unique=True, verbose_name="üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞")
    country = models.CharField(max_length=50, blank=True, null=True, verbose_name="üåç –°—Ç—Ä–∞–Ω–∞-–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å")
    website = models.URLField(blank=True, null=True, verbose_name="üîó –í–µ–±-—Å–∞–π—Ç")
    description = QuillField(blank=True, null=True, verbose_name="üîç –ü–æ–¥—Ä–æ–±–Ω—ã–π")
    logo = ProcessedImageField(
        upload_to='brand_logos/',
        processors=[ResizeToFill(250, 250)],
        format='JPEG',
        options={'quality': 100},
        blank=True,
        null=True,
        verbose_name="üé® –õ–æ–≥–æ—Ç–∏–ø"
    )
    
    class Meta:
        verbose_name = "üÖ± –ë—Ä–µ–Ω–¥"
        verbose_name_plural = "üÖ± –ë—Ä–µ–Ω–¥—ã –ø—Ä–æ–¥—É–∫—Ç–∞"
    
    def __str__(self):
        return self.name
    
    def display_logo(self):
        if self.logo:
            return mark_safe(f'<a href="{self.logo.url}" data-lightbox="image"><img src="{self.logo.url}" width="45" height="45" style="border: 1px solid #e8e8e8;"/></a>')
        return mark_safe(f'<img src="/media/admin-interface/helper/image.png" width="45" height="45" style="border: 1px solid #e8e8e8;"/>')


# 3. Dori mahsuloti modeli
class ProductModel(models.Model):
    allowed = models.BooleanField(default=False, help_text="–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø–æ–ª—è –≤—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ —Å–∞–π—Ç—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", verbose_name="üì¢ –†–∞–∑—Ä–µ—à–∏—Ç—å")
    name = models.CharField(max_length=255, help_text="–ù–µ –±–æ–ª–µ–µ 255 —Å–∏–º–≤–æ–ª–æ–≤", verbose_name="üíä –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞")
    category = models.ManyToManyField(CategoryModel, related_name="product_category", verbose_name="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")    
    brand = models.ForeignKey(BrandModel, related_name="product_brand", on_delete=models.SET_NULL, null=True, verbose_name="üè∑Ô∏è –ë—Ä–µ–Ω–¥")
    description = models.CharField(max_length=255, null=True, blank=True, verbose_name="üìù –û–ø–∏—Å–∞–Ω–∏–µ")
    detail = QuillField(null=True, blank=True, verbose_name="üõ† –ü–æ–¥—Ä–æ–±–Ω—ã–π")
    image = ProcessedImageField(
        upload_to='product_images/',
        processors=[ResizeToFill(250, 250)],
        format='JPEG',
        options={'quality': 100},
        blank=True,
        null=True
    )

    class Meta:
        verbose_name = "–ü—Ä–æ–¥—É–∫—Ç"
        verbose_name_plural = "üõç –ü—Ä–æ–¥—É–∫—Ç—ã"
    
    def __str__(self):
        return self.name
    
    def display_image(self):
        if self.image:
            return mark_safe(f'<a href="{self.image.url}" data-lightbox="image"><img src="{self.image.url}" width="45" height="45" style="border: 1px solid #e8e8e8;"/></a>')
        return mark_safe(f'<img src="/media/admin-interface/helper/image.png" width="45" height="45" style="border: 1px solid #e8e8e8;"/>')



# Product-ni rasmlar modeli
class ProductImageModel(models.Model):
    allowed = models.BooleanField(default=False, help_text="–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø–æ–ª—è –≤—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ —Å–∞–π—Ç—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", verbose_name="üì¢ –†–∞–∑—Ä–µ—à–∏—Ç—å")
    product = models.ForeignKey(ProductModel, related_name='images', on_delete=models.CASCADE, null=True, blank=True)
    image = models.ImageField(upload_to='product_images/', verbose_name='üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')

    class Meta:
        verbose_name = "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞"
        verbose_name_plural = "üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞"

    def __str__(self):
        return f"Image of {self.product.name}"
    
    def display_image(self):
        if self.image:
            return mark_safe(f'<a href="{self.image.url}" data-lightbox="gallery"><img src="{self.image.url}" width="45" height="45" style="border: 1px solid #e8e8e8;"/></a>')
        return mark_safe(f'<img src="/media/admin-interface/helper/image.png" width="45" height="45" style="border: 1px solid #e8e8e8;"/>')
    

# Productni bir-nechta o`lchamli modeli
class ProductVariantsModel(models.Model):
    allowed = models.BooleanField(default=False, help_text="–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø–æ–ª—è –≤—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ —Å–∞–π—Ç—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", verbose_name="üì¢ –†–∞–∑—Ä–µ—à–∏—Ç—å")
    product = models.ForeignKey(ProductModel, related_name='variants', on_delete=models.CASCADE)
    package_quantity = models.CharField(max_length=25, help_text="–ù–µ –±–æ–ª–µ–µ 25 —Å–∏–º–≤–æ–ª–æ–≤", verbose_name="üß∫ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —É–ø–∞–∫–æ–≤–∫–µ")
    product_code = models.CharField(max_length=25, help_text="–ù–µ –±–æ–ª–µ–µ 25 —Å–∏–º–≤–æ–ª–æ–≤", null=True, blank=True, verbose_name="üè∑Ô∏è –ö–æ–¥ —Ç–æ–≤–∞—Ä–∞")
    shipping_weight = models.CharField(max_length=25, help_text="–ù–µ –±–æ–ª–µ–µ 25 —Å–∏–º–≤–æ–ª–æ–≤", null=True, blank=True, verbose_name="‚öñÔ∏è	–í–µ—Å –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ")
    dimensions = models.CharField(max_length=25, help_text="–ù–µ –±–æ–ª–µ–µ 25 —Å–∏–º–≤–æ–ª–æ–≤", null=True, blank=True, verbose_name="üìê –†–∞–∑–º–µ—Ä—ã")
    price = models.DecimalField(max_digits=10, decimal_places=0, help_text="–í–∞–ª—é—Ç–∞ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω –°–£–ú*", verbose_name="üí∏ –¶–µ–Ω–∞")
    stock = models.PositiveIntegerField(verbose_name="üì¶ –í –Ω–∞–ª–∏—á–∏–∏")

    class Meta: 
        verbose_name = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —É–ø–∞–∫–æ–≤–∫–µ"
        verbose_name_plural = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —É–ø–∞–∫–æ–≤–∫–µ"

    def __str__(self):
        return self.product.name
    

CategoryModel.display_image.short_description = "üñºÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
BrandModel.display_logo.short_description = "üé® –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ –ª–æ–≥–æ—Ç–∏–ø–∞"
ProductImageModel.display_image.short_description = "üñºÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
ProductModel.display_image.short_description = "üñºÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"